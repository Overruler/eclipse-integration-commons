/*******************************************************************************
 *  Copyright (c) 2013 GoPivotal, Inc.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 *
 *  Contributors:
 *      GoPivotal, Inc. - initial API and implementation
 *******************************************************************************/
package org.springsource.ide.eclipse.commons.gettingstarted.preferences;

import org.codehaus.jackson.annotate.JsonProperty;

/**
 * A 'bookmark' containing a name and url. 
 * <p>
 * Meant to be serialized/deserialized from preferences as Json String data using
 * Jackson ObjectMapper.
 * 
 * @author Kris De Volder
 */
public class URLBookmark {

	@JsonProperty("name")
	private String name;
	
	@JsonProperty("url")
	private String url;

	/**
	 * Need a default constructor for Jackson mapper to be able to deserialise from json.
	 */
	public URLBookmark() {
	}

	public URLBookmark(String name, String url) {
		this.name = name;
		this.url = url;
	}

	@Override
	public String toString() {
		return "URLBookmark("+name+" = "+url+")";
	}
	
	
	////////////////////////////////////////////////
	/// Getters and setters (generated by Eclipse 
	
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	////////////////////////////////////////////
	// equals and hashcode (generated by Eclipse
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((url == null) ? 0 : url.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		URLBookmark other = (URLBookmark) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (url == null) {
			if (other.url != null)
				return false;
		} else if (!url.equals(other.url))
			return false;
		return true;
	}
	
	
}
